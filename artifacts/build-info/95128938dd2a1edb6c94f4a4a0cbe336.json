{
	"id": "95128938dd2a1edb6c94f4a4a0cbe336",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"B20T-wfgh.sol": {
				"content": "pragma solidity 0.5.16;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract BEP20Token is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 private _decimals;\n  string private _symbol;\n  string private _name;\n\n  constructor() public {\n    _name = \"WFGH Capital\";\n    _symbol = \"WFGH\";\n    _decimals = 18;\n    _totalSupply = 5743;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"B20T-wfgh.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"B20T-wfgh.sol\":10968:18518  contract BEP20Token is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"B20T-wfgh.sol\":11286:11507  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"B20T-wfgh.sol\":11286:11507  constructor() public {... */\n  pop\n    /* \"B20T-wfgh.sol\":9527:9544  address msgSender */\n  0x00\n    /* \"B20T-wfgh.sol\":9547:9559  _msgSender() */\n  tag_7\n    /* \"B20T-wfgh.sol\":9547:9557  _msgSender */\n  shl(0x20, tag_8)\n    /* \"B20T-wfgh.sol\":9547:9559  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"B20T-wfgh.sol\":9527:9559  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"B20T-wfgh.sol\":9574:9583  msgSender */\n  dup1\n    /* \"B20T-wfgh.sol\":9565:9571  _owner */\n  0x00\n  dup1\n    /* \"B20T-wfgh.sol\":9565:9583  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B20T-wfgh.sol\":9627:9636  msgSender */\n  dup1\n    /* \"B20T-wfgh.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B20T-wfgh.sol\":9623:9624  0 */\n  0x00\n    /* \"B20T-wfgh.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"B20T-wfgh.sol\":9497:9642  constructor () internal {... */\n  pop\n    /* \"B20T-wfgh.sol\":11313:11335  _name = \"WFGH Capital\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x57464748204361706974616c0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"B20T-wfgh.sol\":11313:11318  _name */\n  0x06\n    /* \"B20T-wfgh.sol\":11313:11335  _name = \"WFGH Capital\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"B20T-wfgh.sol\":11341:11357  _symbol = \"WFGH\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5746474800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"B20T-wfgh.sol\":11341:11348  _symbol */\n  0x05\n    /* \"B20T-wfgh.sol\":11341:11357  _symbol = \"WFGH\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"B20T-wfgh.sol\":11375:11377  18 */\n  0x12\n    /* \"B20T-wfgh.sol\":11363:11372  _decimals */\n  0x04\n  0x00\n    /* \"B20T-wfgh.sol\":11363:11377  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B20T-wfgh.sol\":11398:11402  5743 */\n  0x166f\n    /* \"B20T-wfgh.sol\":11383:11395  _totalSupply */\n  0x03\n    /* \"B20T-wfgh.sol\":11383:11402  _totalSupply = 5743 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B20T-wfgh.sol\":11432:11444  _totalSupply */\n  sload(0x03)\n    /* \"B20T-wfgh.sol\":11408:11417  _balances */\n  0x01\n    /* \"B20T-wfgh.sol\":11408:11429  _balances[msg.sender] */\n  0x00\n    /* \"B20T-wfgh.sol\":11418:11428  msg.sender */\n  caller\n    /* \"B20T-wfgh.sol\":11408:11429  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"B20T-wfgh.sol\":11408:11444  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B20T-wfgh.sol\":11477:11487  msg.sender */\n  caller\n    /* \"B20T-wfgh.sol\":11456:11502  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B20T-wfgh.sol\":11473:11474  0 */\n  0x00\n    /* \"B20T-wfgh.sol\":11456:11502  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"B20T-wfgh.sol\":11489:11501  _totalSupply */\n  sload(0x03)\n    /* \"B20T-wfgh.sol\":11456:11502  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"B20T-wfgh.sol\":10968:18518  contract BEP20Token is Context, IBEP20, Ownable {... */\n  jump(tag_13)\n    /* \"B20T-wfgh.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"B20T-wfgh.sol\":3640:3655  address payable */\n  0x00\n    /* \"B20T-wfgh.sol\":3670:3680  msg.sender */\n  caller\n    /* \"B20T-wfgh.sol\":3663:3680  return msg.sender */\n  swap1\n  pop\n    /* \"B20T-wfgh.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"B20T-wfgh.sol\":10968:18518  contract BEP20Token is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B20T-wfgh.sol\":10968:18518  contract BEP20Token is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"B20T-wfgh.sol\":10968:18518  contract BEP20Token is Context, IBEP20, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"B20T-wfgh.sol\":11952:12029  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"B20T-wfgh.sol\":11952:12029  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":12947:13088  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"B20T-wfgh.sol\":12947:13088  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":12080:12165  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":13519:13807  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"B20T-wfgh.sol\":13519:13807  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":11694:11771  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":14175:14372  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"B20T-wfgh.sol\":14175:14372  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":12214:12318  function balanceOf(address account) external view returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"B20T-wfgh.sol\":12214:12318  function balanceOf(address account) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"B20T-wfgh.sol\":11563:11640  function getOwner() external view returns (address) {... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":9710:9781  function owner() public view returns (address) {... */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":11823:11904  function symbol() external view returns (string memory) {... */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_52:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_52)\n    tag_54:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"B20T-wfgh.sol\":11823:11904  function symbol() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_55:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":15266:15383  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"B20T-wfgh.sol\":15266:15383  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":14828:15076  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"B20T-wfgh.sol\":14828:15076  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":12502:12649  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_16:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"B20T-wfgh.sol\":12502:12649  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":12698:12826  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_17:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"B20T-wfgh.sol\":12698:12826  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B20T-wfgh.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"B20T-wfgh.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"B20T-wfgh.sol\":11952:12029  function name() external view returns (string memory) {... */\n    tag_23:\n        /* \"B20T-wfgh.sol\":11991:12004  string memory */\n      0x60\n        /* \"B20T-wfgh.sol\":12019:12024  _name */\n      0x06\n        /* \"B20T-wfgh.sol\":12012:12024  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":11952:12029  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"B20T-wfgh.sol\":12947:13088  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_30:\n        /* \"B20T-wfgh.sol\":13015:13019  bool */\n      0x00\n        /* \"B20T-wfgh.sol\":13027:13066  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"B20T-wfgh.sol\":13036:13048  _msgSender() */\n      tag_77\n        /* \"B20T-wfgh.sol\":13036:13046  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":13036:13048  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"B20T-wfgh.sol\":13050:13057  spender */\n      dup5\n        /* \"B20T-wfgh.sol\":13059:13065  amount */\n      dup5\n        /* \"B20T-wfgh.sol\":13027:13035  _approve */\n      tag_79\n        /* \"B20T-wfgh.sol\":13027:13066  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n        /* \"B20T-wfgh.sol\":13079:13083  true */\n      0x01\n        /* \"B20T-wfgh.sol\":13072:13083  return true */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":12947:13088  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":12080:12165  function totalSupply() external view returns (uint256) {... */\n    tag_32:\n        /* \"B20T-wfgh.sol\":12126:12133  uint256 */\n      0x00\n        /* \"B20T-wfgh.sol\":12148:12160  _totalSupply */\n      sload(0x03)\n        /* \"B20T-wfgh.sol\":12141:12160  return _totalSupply */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":12080:12165  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"B20T-wfgh.sol\":13519:13807  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_35:\n        /* \"B20T-wfgh.sol\":13610:13614  bool */\n      0x00\n        /* \"B20T-wfgh.sol\":13622:13658  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"B20T-wfgh.sol\":13632:13638  sender */\n      dup5\n        /* \"B20T-wfgh.sol\":13640:13649  recipient */\n      dup5\n        /* \"B20T-wfgh.sol\":13651:13657  amount */\n      dup5\n        /* \"B20T-wfgh.sol\":13622:13631  _transfer */\n      tag_83\n        /* \"B20T-wfgh.sol\":13622:13658  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"B20T-wfgh.sol\":13664:13785  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"B20T-wfgh.sol\":13673:13679  sender */\n      dup5\n        /* \"B20T-wfgh.sol\":13681:13693  _msgSender() */\n      tag_85\n        /* \"B20T-wfgh.sol\":13681:13691  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":13681:13693  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"B20T-wfgh.sol\":13695:13784  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"B20T-wfgh.sol\":13733:13739  amount */\n      dup6\n        /* \"B20T-wfgh.sol\":13695:13784  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"B20T-wfgh.sol\":13695:13706  _allowances */\n      0x02\n        /* \"B20T-wfgh.sol\":13695:13714  _allowances[sender] */\n      0x00\n        /* \"B20T-wfgh.sol\":13707:13713  sender */\n      dup12\n        /* \"B20T-wfgh.sol\":13695:13714  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":13695:13728  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"B20T-wfgh.sol\":13715:13727  _msgSender() */\n      tag_87\n        /* \"B20T-wfgh.sol\":13715:13725  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":13715:13727  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"B20T-wfgh.sol\":13695:13728  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":13695:13732  _allowances[sender][_msgSender()].sub */\n      tag_88\n      swap1\n        /* \"B20T-wfgh.sol\":13695:13784  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"B20T-wfgh.sol\":13664:13672  _approve */\n      tag_79\n        /* \"B20T-wfgh.sol\":13664:13785  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n        /* \"B20T-wfgh.sol\":13798:13802  true */\n      0x01\n        /* \"B20T-wfgh.sol\":13791:13802  return true */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":13519:13807  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":11694:11771  function decimals() external view returns (uint8) {... */\n    tag_37:\n        /* \"B20T-wfgh.sol\":11737:11742  uint8 */\n      0x00\n        /* \"B20T-wfgh.sol\":11757:11766  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B20T-wfgh.sol\":11750:11766  return _decimals */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":11694:11771  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"B20T-wfgh.sol\":14175:14372  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_40:\n        /* \"B20T-wfgh.sol\":14255:14259  bool */\n      0x00\n        /* \"B20T-wfgh.sol\":14267:14350  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_91\n        /* \"B20T-wfgh.sol\":14276:14288  _msgSender() */\n      tag_92\n        /* \"B20T-wfgh.sol\":14276:14286  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":14276:14288  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"B20T-wfgh.sol\":14290:14297  spender */\n      dup5\n        /* \"B20T-wfgh.sol\":14299:14349  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_93\n        /* \"B20T-wfgh.sol\":14338:14348  addedValue */\n      dup6\n        /* \"B20T-wfgh.sol\":14299:14310  _allowances */\n      0x02\n        /* \"B20T-wfgh.sol\":14299:14324  _allowances[_msgSender()] */\n      0x00\n        /* \"B20T-wfgh.sol\":14311:14323  _msgSender() */\n      tag_94\n        /* \"B20T-wfgh.sol\":14311:14321  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":14311:14323  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"B20T-wfgh.sol\":14299:14324  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":14299:14333  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"B20T-wfgh.sol\":14325:14332  spender */\n      dup10\n        /* \"B20T-wfgh.sol\":14299:14333  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":14299:14337  _allowances[_msgSender()][spender].add */\n      tag_95\n      swap1\n        /* \"B20T-wfgh.sol\":14299:14349  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"B20T-wfgh.sol\":14267:14275  _approve */\n      tag_79\n        /* \"B20T-wfgh.sol\":14267:14350  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_91:\n        /* \"B20T-wfgh.sol\":14363:14367  true */\n      0x01\n        /* \"B20T-wfgh.sol\":14356:14367  return true */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":14175:14372  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":12214:12318  function balanceOf(address account) external view returns (uint256) {... */\n    tag_43:\n        /* \"B20T-wfgh.sol\":12273:12280  uint256 */\n      0x00\n        /* \"B20T-wfgh.sol\":12295:12304  _balances */\n      0x01\n        /* \"B20T-wfgh.sol\":12295:12313  _balances[account] */\n      0x00\n        /* \"B20T-wfgh.sol\":12305:12312  account */\n      dup4\n        /* \"B20T-wfgh.sol\":12295:12313  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":12288:12313  return _balances[account] */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":12214:12318  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n    tag_45:\n        /* \"B20T-wfgh.sol\":9906:9918  _msgSender() */\n      tag_98\n        /* \"B20T-wfgh.sol\":9906:9916  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"B20T-wfgh.sol\":9896:9918  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":9896:9902  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":9896:9918  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"B20T-wfgh.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"B20T-wfgh.sol\":10387:10388  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":10371:10377  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"B20T-wfgh.sol\":10413:10414  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":10396:10402  _owner */\n      dup1\n      0x00\n        /* \"B20T-wfgh.sol\":10396:10415  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"B20T-wfgh.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"B20T-wfgh.sol\":11563:11640  function getOwner() external view returns (address) {... */\n    tag_47:\n        /* \"B20T-wfgh.sol\":11606:11613  address */\n      0x00\n        /* \"B20T-wfgh.sol\":11628:11635  owner() */\n      tag_102\n        /* \"B20T-wfgh.sol\":11628:11633  owner */\n      tag_49\n        /* \"B20T-wfgh.sol\":11628:11635  owner() */\n      jump\t// in\n    tag_102:\n        /* \"B20T-wfgh.sol\":11621:11635  return owner() */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":11563:11640  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"B20T-wfgh.sol\":9710:9781  function owner() public view returns (address) {... */\n    tag_49:\n        /* \"B20T-wfgh.sol\":9748:9755  address */\n      0x00\n        /* \"B20T-wfgh.sol\":9770:9776  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":9763:9776  return _owner */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":9710:9781  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"B20T-wfgh.sol\":11823:11904  function symbol() external view returns (string memory) {... */\n    tag_51:\n        /* \"B20T-wfgh.sol\":11864:11877  string memory */\n      0x60\n        /* \"B20T-wfgh.sol\":11892:11899  _symbol */\n      0x05\n        /* \"B20T-wfgh.sol\":11885:11899  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":11823:11904  function symbol() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"B20T-wfgh.sol\":15266:15383  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_58:\n        /* \"B20T-wfgh.sol\":15322:15326  bool */\n      0x00\n        /* \"B20T-wfgh.sol\":9906:9918  _msgSender() */\n      tag_109\n        /* \"B20T-wfgh.sol\":9906:9916  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"B20T-wfgh.sol\":9896:9918  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":9896:9902  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":9896:9918  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"B20T-wfgh.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"B20T-wfgh.sol\":15334:15361  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"B20T-wfgh.sol\":15340:15352  _msgSender() */\n      tag_113\n        /* \"B20T-wfgh.sol\":15340:15350  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":15340:15352  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"B20T-wfgh.sol\":15354:15360  amount */\n      dup4\n        /* \"B20T-wfgh.sol\":15334:15339  _mint */\n      tag_114\n        /* \"B20T-wfgh.sol\":15334:15361  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n        /* \"B20T-wfgh.sol\":15374:15378  true */\n      0x01\n        /* \"B20T-wfgh.sol\":15367:15378  return true */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":15266:15383  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":14828:15076  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_61:\n        /* \"B20T-wfgh.sol\":14913:14917  bool */\n      0x00\n        /* \"B20T-wfgh.sol\":14925:15054  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_116\n        /* \"B20T-wfgh.sol\":14934:14946  _msgSender() */\n      tag_117\n        /* \"B20T-wfgh.sol\":14934:14944  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":14934:14946  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"B20T-wfgh.sol\":14948:14955  spender */\n      dup5\n        /* \"B20T-wfgh.sol\":14957:15053  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_118\n        /* \"B20T-wfgh.sol\":14996:15011  subtractedValue */\n      dup6\n        /* \"B20T-wfgh.sol\":14957:15053  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"B20T-wfgh.sol\":14957:14968  _allowances */\n      0x02\n        /* \"B20T-wfgh.sol\":14957:14982  _allowances[_msgSender()] */\n      0x00\n        /* \"B20T-wfgh.sol\":14969:14981  _msgSender() */\n      tag_119\n        /* \"B20T-wfgh.sol\":14969:14979  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":14969:14981  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"B20T-wfgh.sol\":14957:14982  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":14957:14991  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"B20T-wfgh.sol\":14983:14990  spender */\n      dup11\n        /* \"B20T-wfgh.sol\":14957:14991  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":14957:14995  _allowances[_msgSender()][spender].sub */\n      tag_88\n      swap1\n        /* \"B20T-wfgh.sol\":14957:15053  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"B20T-wfgh.sol\":14925:14933  _approve */\n      tag_79\n        /* \"B20T-wfgh.sol\":14925:15054  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_116:\n        /* \"B20T-wfgh.sol\":15067:15071  true */\n      0x01\n        /* \"B20T-wfgh.sol\":15060:15071  return true */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":14828:15076  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":12502:12649  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_64:\n        /* \"B20T-wfgh.sol\":12573:12577  bool */\n      0x00\n        /* \"B20T-wfgh.sol\":12585:12627  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"B20T-wfgh.sol\":12595:12607  _msgSender() */\n      tag_122\n        /* \"B20T-wfgh.sol\":12595:12605  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":12595:12607  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"B20T-wfgh.sol\":12609:12618  recipient */\n      dup5\n        /* \"B20T-wfgh.sol\":12620:12626  amount */\n      dup5\n        /* \"B20T-wfgh.sol\":12585:12594  _transfer */\n      tag_83\n        /* \"B20T-wfgh.sol\":12585:12627  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_121:\n        /* \"B20T-wfgh.sol\":12640:12644  true */\n      0x01\n        /* \"B20T-wfgh.sol\":12633:12644  return true */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":12502:12649  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":12698:12826  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_67:\n        /* \"B20T-wfgh.sol\":12772:12779  uint256 */\n      0x00\n        /* \"B20T-wfgh.sol\":12794:12805  _allowances */\n      0x02\n        /* \"B20T-wfgh.sol\":12794:12812  _allowances[owner] */\n      0x00\n        /* \"B20T-wfgh.sol\":12806:12811  owner */\n      dup5\n        /* \"B20T-wfgh.sol\":12794:12812  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":12794:12821  _allowances[owner][spender] */\n      0x00\n        /* \"B20T-wfgh.sol\":12813:12820  spender */\n      dup4\n        /* \"B20T-wfgh.sol\":12794:12821  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":12787:12821  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":12698:12826  function allowance(address owner, address spender) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_70:\n        /* \"B20T-wfgh.sol\":9906:9918  _msgSender() */\n      tag_125\n        /* \"B20T-wfgh.sol\":9906:9916  _msgSender */\n      tag_78\n        /* \"B20T-wfgh.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"B20T-wfgh.sol\":9896:9918  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":9896:9902  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":9896:9918  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"B20T-wfgh.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"B20T-wfgh.sol\":10627:10655  _transferOwnership(newOwner) */\n      tag_128\n        /* \"B20T-wfgh.sol\":10646:10654  newOwner */\n      dup2\n        /* \"B20T-wfgh.sol\":10627:10645  _transferOwnership */\n      tag_129\n        /* \"B20T-wfgh.sol\":10627:10655  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"B20T-wfgh.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\n    tag_78:\n        /* \"B20T-wfgh.sol\":3640:3655  address payable */\n      0x00\n        /* \"B20T-wfgh.sol\":3670:3680  msg.sender */\n      caller\n        /* \"B20T-wfgh.sol\":3663:3680  return msg.sender */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"B20T-wfgh.sol\":17819:18133  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_79:\n        /* \"B20T-wfgh.sol\":17925:17926  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":17908:17927  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":17908:17913  owner */\n      dup4\n        /* \"B20T-wfgh.sol\":17908:17927  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"B20T-wfgh.sol\":17900:17968  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"B20T-wfgh.sol\":18001:18002  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":17982:18003  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":17982:17989  spender */\n      dup3\n        /* \"B20T-wfgh.sol\":17982:18003  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"B20T-wfgh.sol\":17974:18042  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"B20T-wfgh.sol\":18079:18085  amount */\n      dup1\n        /* \"B20T-wfgh.sol\":18049:18060  _allowances */\n      0x02\n        /* \"B20T-wfgh.sol\":18049:18067  _allowances[owner] */\n      0x00\n        /* \"B20T-wfgh.sol\":18061:18066  owner */\n      dup6\n        /* \"B20T-wfgh.sol\":18049:18067  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":18049:18076  _allowances[owner][spender] */\n      0x00\n        /* \"B20T-wfgh.sol\":18068:18075  spender */\n      dup5\n        /* \"B20T-wfgh.sol\":18049:18076  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":18049:18085  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B20T-wfgh.sol\":18112:18119  spender */\n      dup2\n        /* \"B20T-wfgh.sol\":18096:18128  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":18105:18110  owner */\n      dup4\n        /* \"B20T-wfgh.sol\":18096:18128  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"B20T-wfgh.sol\":18121:18127  amount */\n      dup4\n        /* \"B20T-wfgh.sol\":18096:18128  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"B20T-wfgh.sol\":17819:18133  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":15827:16269  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_83:\n        /* \"B20T-wfgh.sol\":15938:15939  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":15920:15940  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":15920:15926  sender */\n      dup4\n        /* \"B20T-wfgh.sol\":15920:15940  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"B20T-wfgh.sol\":15912:15982  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"B20T-wfgh.sol\":16017:16018  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":15996:16019  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":15996:16005  recipient */\n      dup3\n        /* \"B20T-wfgh.sol\":15996:16019  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"B20T-wfgh.sol\":15988:16059  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"B20T-wfgh.sol\":16086:16157  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"B20T-wfgh.sol\":16108:16114  amount */\n      dup2\n        /* \"B20T-wfgh.sol\":16086:16157  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"B20T-wfgh.sol\":16086:16095  _balances */\n      0x01\n        /* \"B20T-wfgh.sol\":16086:16103  _balances[sender] */\n      0x00\n        /* \"B20T-wfgh.sol\":16096:16102  sender */\n      dup8\n        /* \"B20T-wfgh.sol\":16086:16103  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":16086:16107  _balances[sender].sub */\n      tag_88\n      swap1\n        /* \"B20T-wfgh.sol\":16086:16157  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"B20T-wfgh.sol\":16066:16075  _balances */\n      0x01\n        /* \"B20T-wfgh.sol\":16066:16083  _balances[sender] */\n      0x00\n        /* \"B20T-wfgh.sol\":16076:16082  sender */\n      dup6\n        /* \"B20T-wfgh.sol\":16066:16083  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":16066:16157  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B20T-wfgh.sol\":16186:16218  _balances[recipient].add(amount) */\n      tag_138\n        /* \"B20T-wfgh.sol\":16211:16217  amount */\n      dup2\n        /* \"B20T-wfgh.sol\":16186:16195  _balances */\n      0x01\n        /* \"B20T-wfgh.sol\":16186:16206  _balances[recipient] */\n      0x00\n        /* \"B20T-wfgh.sol\":16196:16205  recipient */\n      dup6\n        /* \"B20T-wfgh.sol\":16186:16206  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":16186:16210  _balances[recipient].add */\n      tag_95\n      swap1\n        /* \"B20T-wfgh.sol\":16186:16218  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"B20T-wfgh.sol\":16163:16172  _balances */\n      0x01\n        /* \"B20T-wfgh.sol\":16163:16183  _balances[recipient] */\n      0x00\n        /* \"B20T-wfgh.sol\":16173:16182  recipient */\n      dup5\n        /* \"B20T-wfgh.sol\":16163:16183  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":16163:16218  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B20T-wfgh.sol\":16246:16255  recipient */\n      dup2\n        /* \"B20T-wfgh.sol\":16229:16264  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":16238:16244  sender */\n      dup4\n        /* \"B20T-wfgh.sol\":16229:16264  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"B20T-wfgh.sol\":16257:16263  amount */\n      dup4\n        /* \"B20T-wfgh.sol\":16229:16264  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"B20T-wfgh.sol\":15827:16269  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":5492:5665  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"B20T-wfgh.sol\":5578:5585  uint256 */\n      0x00\n        /* \"B20T-wfgh.sol\":5606:5607  a */\n      dup4\n        /* \"B20T-wfgh.sol\":5601:5602  b */\n      dup4\n        /* \"B20T-wfgh.sol\":5601:5607  b <= a */\n      gt\n      iszero\n        /* \"B20T-wfgh.sol\":5609:5621  errorMessage */\n      dup3\n        /* \"B20T-wfgh.sol\":5593:5622  require(b <= a, errorMessage) */\n      swap1\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"B20T-wfgh.sol\":5593:5622  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n        /* \"B20T-wfgh.sol\":5628:5637  uint256 c */\n      0x00\n        /* \"B20T-wfgh.sol\":5644:5645  b */\n      dup4\n        /* \"B20T-wfgh.sol\":5640:5641  a */\n      dup6\n        /* \"B20T-wfgh.sol\":5640:5645  a - b */\n      sub\n        /* \"B20T-wfgh.sol\":5628:5645  uint256 c = a - b */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":5659:5660  c */\n      dup1\n        /* \"B20T-wfgh.sol\":5652:5660  return c */\n      swap2\n      pop\n      pop\n        /* \"B20T-wfgh.sol\":5492:5665  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":4694:4856  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"B20T-wfgh.sol\":4752:4759  uint256 */\n      0x00\n        /* \"B20T-wfgh.sol\":4767:4776  uint256 c */\n      dup1\n        /* \"B20T-wfgh.sol\":4783:4784  b */\n      dup3\n        /* \"B20T-wfgh.sol\":4779:4780  a */\n      dup5\n        /* \"B20T-wfgh.sol\":4779:4784  a + b */\n      add\n        /* \"B20T-wfgh.sol\":4767:4784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"B20T-wfgh.sol\":4803:4804  a */\n      dup4\n        /* \"B20T-wfgh.sol\":4798:4799  c */\n      dup2\n        /* \"B20T-wfgh.sol\":4798:4804  c >= a */\n      lt\n      iszero\n        /* \"B20T-wfgh.sol\":4790:4836  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"B20T-wfgh.sol\":4850:4851  c */\n      dup1\n        /* \"B20T-wfgh.sol\":4843:4851  return c */\n      swap2\n      pop\n      pop\n        /* \"B20T-wfgh.sol\":4694:4856  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":16519:16803  function _mint(address account, uint256 amount) internal {... */\n    tag_114:\n        /* \"B20T-wfgh.sol\":16609:16610  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":16590:16611  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":16590:16597  account */\n      dup3\n        /* \"B20T-wfgh.sol\":16590:16611  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"B20T-wfgh.sol\":16582:16647  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"B20T-wfgh.sol\":16669:16693  _totalSupply.add(amount) */\n      tag_149\n        /* \"B20T-wfgh.sol\":16686:16692  amount */\n      dup2\n        /* \"B20T-wfgh.sol\":16669:16681  _totalSupply */\n      sload(0x03)\n        /* \"B20T-wfgh.sol\":16669:16685  _totalSupply.add */\n      tag_95\n      swap1\n        /* \"B20T-wfgh.sol\":16669:16693  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"B20T-wfgh.sol\":16654:16666  _totalSupply */\n      0x03\n        /* \"B20T-wfgh.sol\":16654:16693  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B20T-wfgh.sol\":16720:16750  _balances[account].add(amount) */\n      tag_150\n        /* \"B20T-wfgh.sol\":16743:16749  amount */\n      dup2\n        /* \"B20T-wfgh.sol\":16720:16729  _balances */\n      0x01\n        /* \"B20T-wfgh.sol\":16720:16738  _balances[account] */\n      0x00\n        /* \"B20T-wfgh.sol\":16730:16737  account */\n      dup6\n        /* \"B20T-wfgh.sol\":16720:16738  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B20T-wfgh.sol\":16720:16742  _balances[account].add */\n      tag_95\n      swap1\n        /* \"B20T-wfgh.sol\":16720:16750  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"B20T-wfgh.sol\":16699:16708  _balances */\n      0x01\n        /* \"B20T-wfgh.sol\":16699:16717  _balances[account] */\n      0x00\n        /* \"B20T-wfgh.sol\":16709:16716  account */\n      dup5\n        /* \"B20T-wfgh.sol\":16699:16717  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B20T-wfgh.sol\":16699:16750  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B20T-wfgh.sol\":16782:16789  account */\n      dup2\n        /* \"B20T-wfgh.sol\":16761:16798  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":16778:16779  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":16761:16798  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"B20T-wfgh.sol\":16791:16797  amount */\n      dup4\n        /* \"B20T-wfgh.sol\":16761:16798  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"B20T-wfgh.sol\":16519:16803  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"B20T-wfgh.sol\":10753:10964  function _transferOwnership(address newOwner) internal {... */\n    tag_129:\n        /* \"B20T-wfgh.sol\":10842:10843  0 */\n      0x00\n        /* \"B20T-wfgh.sol\":10822:10844  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":10822:10830  newOwner */\n      dup2\n        /* \"B20T-wfgh.sol\":10822:10844  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"B20T-wfgh.sol\":10814:10887  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"B20T-wfgh.sol\":10927:10935  newOwner */\n      dup1\n        /* \"B20T-wfgh.sol\":10898:10936  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":10919:10925  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B20T-wfgh.sol\":10898:10936  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"B20T-wfgh.sol\":10951:10959  newOwner */\n      dup1\n        /* \"B20T-wfgh.sol\":10942:10948  _owner */\n      0x00\n      dup1\n        /* \"B20T-wfgh.sol\":10942:10959  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"B20T-wfgh.sol\":10753:10964  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158203a67717ba96b40b57efb9e895a49e633ccdd171b0f0b728cdae880d0a8dcd11964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200023760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600c81526020017f57464748204361706974616c0000000000000000000000000000000000000000815250600690805190602001906200010f9291906200023f565b506040518060400160405280600481526020017f5746474800000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d9291906200023f565b506012600460006101000a81548160ff021916908360ff16021790555061166f600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002ee565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028257805160ff1916838001178555620002b3565b82800160010185558215620002b3579182015b82811115620002b257825182559160200191906001019062000295565b5b509050620002c29190620002c6565b5090565b620002eb91905b80821115620002e7576000816000905550600101620002cd565b5090565b90565b61190580620002fe6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158203a67717ba96b40b57efb9e895a49e633ccdd171b0f0b728cdae880d0a8dcd11964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x237 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57464748204361706974616C0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x23F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5746474800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x23F JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x166F PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x282 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2B3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2B3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x295 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2C2 SWAP2 SWAP1 PUSH3 0x2C6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2EB SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2CD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1905 DUP1 PUSH3 0x2FE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158203A67717BA96B40 0xB5 PUSH31 0xFB9E895A49E633CCDD171B0F0B728CDAE880D0A8DCD11964736F6C63430005 LT STOP ORIGIN ",
							"sourceMap": "10968:7550:0:-;;;11286:221;8:9:-1;5:2;;;30:1;27;20:12;5:2;11286:221:0;9527:17;9547:12;:10;;;:12;;:::i;:::-;9527:32;;9574:9;9565:6;;:18;;;;;;;;;;;;;;;;;;9627:9;9594:43;;9623:1;9594:43;;;;;;;;;;;;9497:145;11313:22;;;;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;:::i;:::-;;11341:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;;;;;;;:::i;:::-;;11375:2;11363:9;;:14;;;;;;;;;;;;;;;;;;11398:4;11383:12;:19;;;;11432:12;;11408:9;:21;11418:10;11408:21;;;;;;;;;;;;;;;:36;;;;11477:10;11456:46;;11473:1;11456:46;;;11489:12;;11456:46;;;;;;;;;;;;;;;;;;10968:7550;;3595:90;3640:15;3670:10;3663:17;;3595:90;:::o;10968:7550::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158203a67717ba96b40b57efb9e895a49e633ccdd171b0f0b728cdae880d0a8dcd11964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158203A67717BA96B40 0xB5 PUSH31 0xFB9E895A49E633CCDD171B0F0B728CDAE880D0A8DCD11964736F6C63430005 LT STOP ORIGIN ",
							"sourceMap": "10968:7550:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10968:7550:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11952:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11952:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12947:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12947:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12080:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13519:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13519:288:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11694:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14175:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14175:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12214:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12214:104:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10293:127;;;:::i;:::-;;11563:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9710:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11823:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11823:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15266:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15266:117:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14828:248;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14828:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12502:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12502:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12698:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12698:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10559:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10559:101:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;11952:77;11991:13;12019:5;12012:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11952:77;:::o;12947:141::-;13015:4;13027:39;13036:12;:10;:12::i;:::-;13050:7;13059:6;13027:8;:39::i;:::-;13079:4;13072:11;;12947:141;;;;:::o;12080:85::-;12126:7;12148:12;;12141:19;;12080:85;:::o;13519:288::-;13610:4;13622:36;13632:6;13640:9;13651:6;13622:9;:36::i;:::-;13664:121;13673:6;13681:12;:10;:12::i;:::-;13695:89;13733:6;13695:89;;;;;;;;;;;;;;;;;:11;:19;13707:6;13695:19;;;;;;;;;;;;;;;:33;13715:12;:10;:12::i;:::-;13695:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;13664:8;:121::i;:::-;13798:4;13791:11;;13519:288;;;;;:::o;11694:77::-;11737:5;11757:9;;;;;;;;;;;11750:16;;11694:77;:::o;14175:197::-;14255:4;14267:83;14276:12;:10;:12::i;:::-;14290:7;14299:50;14338:10;14299:11;:25;14311:12;:10;:12::i;:::-;14299:25;;;;;;;;;;;;;;;:34;14325:7;14299:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14267:8;:83::i;:::-;14363:4;14356:11;;14175:197;;;;:::o;12214:104::-;12273:7;12295:9;:18;12305:7;12295:18;;;;;;;;;;;;;;;;12288:25;;12214:104;;;:::o;10293:127::-;9906:12;:10;:12::i;:::-;9896:22;;:6;;;;;;;;;;;:22;;;9888:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10387:1;10350:40;;10371:6;;;;;;;;;;;10350:40;;;;;;;;;;;;10413:1;10396:6;;:19;;;;;;;;;;;;;;;;;;10293:127::o;11563:77::-;11606:7;11628;:5;:7::i;:::-;11621:14;;11563:77;:::o;9710:71::-;9748:7;9770:6;;;;;;;;;;;9763:13;;9710:71;:::o;11823:81::-;11864:13;11892:7;11885:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11823:81;:::o;15266:117::-;15322:4;9906:12;:10;:12::i;:::-;9896:22;;:6;;;;;;;;;;;:22;;;9888:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15334:27;15340:12;:10;:12::i;:::-;15354:6;15334:5;:27::i;:::-;15374:4;15367:11;;15266:117;;;:::o;14828:248::-;14913:4;14925:129;14934:12;:10;:12::i;:::-;14948:7;14957:96;14996:15;14957:96;;;;;;;;;;;;;;;;;:11;:25;14969:12;:10;:12::i;:::-;14957:25;;;;;;;;;;;;;;;:34;14983:7;14957:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;14925:8;:129::i;:::-;15067:4;15060:11;;14828:248;;;;:::o;12502:147::-;12573:4;12585:42;12595:12;:10;:12::i;:::-;12609:9;12620:6;12585:9;:42::i;:::-;12640:4;12633:11;;12502:147;;;;:::o;12698:128::-;12772:7;12794:11;:18;12806:5;12794:18;;;;;;;;;;;;;;;:27;12813:7;12794:27;;;;;;;;;;;;;;;;12787:34;;12698:128;;;;:::o;10559:101::-;9906:12;:10;:12::i;:::-;9896:22;;:6;;;;;;;;;;;:22;;;9888:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10627:28;10646:8;10627:18;:28::i;:::-;10559:101;:::o;3595:90::-;3640:15;3670:10;3663:17;;3595:90;:::o;17819:314::-;17925:1;17908:19;;:5;:19;;;;17900:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18001:1;17982:21;;:7;:21;;;;17974:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18079:6;18049:11;:18;18061:5;18049:18;;;;;;;;;;;;;;;:27;18068:7;18049:27;;;;;;;;;;;;;;;:36;;;;18112:7;18096:32;;18105:5;18096:32;;;18121:6;18096:32;;;;;;;;;;;;;;;;;;17819:314;;;:::o;15827:442::-;15938:1;15920:20;;:6;:20;;;;15912:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16017:1;15996:23;;:9;:23;;;;15988:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16086;16108:6;16086:71;;;;;;;;;;;;;;;;;:9;:17;16096:6;16086:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16066:9;:17;16076:6;16066:17;;;;;;;;;;;;;;;:91;;;;16186:32;16211:6;16186:9;:20;16196:9;16186:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16163:9;:20;16173:9;16163:20;;;;;;;;;;;;;;;:55;;;;16246:9;16229:35;;16238:6;16229:35;;;16257:6;16229:35;;;;;;;;;;;;;;;;;;15827:442;;;:::o;5492:173::-;5578:7;5606:1;5601;:6;;5609:12;5593:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5593:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5628:9;5644:1;5640;:5;5628:17;;5659:1;5652:8;;;5492:173;;;;;:::o;4694:162::-;4752:7;4767:9;4783:1;4779;:5;4767:17;;4803:1;4798;:6;;4790:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:1;4843:8;;;4694:162;;;;:::o;16519:284::-;16609:1;16590:21;;:7;:21;;;;16582:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16669:24;16686:6;16669:12;;:16;;:24;;;;:::i;:::-;16654:12;:39;;;;16720:30;16743:6;16720:9;:18;16730:7;16720:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;16699:9;:18;16709:7;16699:18;;;;;;;;;;;;;;;:51;;;;16782:7;16761:37;;16778:1;16761:37;;;16791:6;16761:37;;;;;;;;;;;;;;;;;;16519:284;;:::o;10753:211::-;10842:1;10822:22;;:8;:22;;;;10814:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10927:8;10898:38;;10919:6;;;;;;;;;;;10898:38;;;;;;;;;;;;10951:8;10942:6;;:17;;;;;;;;;;;;;;;;;;10753:211;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1281000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1263",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24386",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "MSTORE"
								},
								{
									"begin": 11286,
									"end": 11507,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11286,
									"end": 11507,
									"name": "POP"
								},
								{
									"begin": 9527,
									"end": 9544,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "SHL"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "SHR"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "JUMPDEST"
								},
								{
									"begin": 9527,
									"end": 9559,
									"name": "SWAP1"
								},
								{
									"begin": 9527,
									"end": 9559,
									"name": "POP"
								},
								{
									"begin": 9574,
									"end": 9583,
									"name": "DUP1"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "DUP1"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "EXP"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP2"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SLOAD"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP2"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "MUL"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "NOT"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "AND"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP1"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP4"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "AND"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "MUL"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "OR"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP1"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SSTORE"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "POP"
								},
								{
									"begin": 9627,
									"end": 9636,
									"name": "DUP1"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "AND"
								},
								{
									"begin": 9623,
									"end": 9624,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "AND"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "MLOAD"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "MLOAD"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "DUP1"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "SWAP2"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "SUB"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "SWAP1"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "LOG3"
								},
								{
									"begin": 9497,
									"end": 9642,
									"name": "POP"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "MLOAD"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "DUP1"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "ADD"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "MSTORE"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "DUP1"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "DUP2"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "MSTORE"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "ADD"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH",
									"value": "57464748204361706974616C0000000000000000000000000000000000000000"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "DUP2"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "MSTORE"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "POP"
								},
								{
									"begin": 11313,
									"end": 11318,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "SWAP1"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "DUP1"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "MLOAD"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "SWAP1"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "ADD"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "SWAP1"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "SWAP3"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "SWAP2"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "SWAP1"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "JUMPDEST"
								},
								{
									"begin": 11313,
									"end": 11335,
									"name": "POP"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "MLOAD"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "DUP1"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "ADD"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "MSTORE"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "DUP1"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "DUP2"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "MSTORE"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "ADD"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH",
									"value": "5746474800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "DUP2"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "MSTORE"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "POP"
								},
								{
									"begin": 11341,
									"end": 11348,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "SWAP1"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "DUP1"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "MLOAD"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "SWAP1"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "ADD"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "SWAP1"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "SWAP3"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "SWAP2"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "SWAP1"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "JUMPDEST"
								},
								{
									"begin": 11341,
									"end": 11357,
									"name": "POP"
								},
								{
									"begin": 11375,
									"end": 11377,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11363,
									"end": 11372,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11363,
									"end": 11372,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "EXP"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "DUP2"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "SLOAD"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "DUP2"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "MUL"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "NOT"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "AND"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "SWAP1"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "DUP4"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "AND"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "MUL"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "OR"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "SWAP1"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "SSTORE"
								},
								{
									"begin": 11363,
									"end": 11377,
									"name": "POP"
								},
								{
									"begin": 11398,
									"end": 11402,
									"name": "PUSH",
									"value": "166F"
								},
								{
									"begin": 11383,
									"end": 11395,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11383,
									"end": 11402,
									"name": "DUP2"
								},
								{
									"begin": 11383,
									"end": 11402,
									"name": "SWAP1"
								},
								{
									"begin": 11383,
									"end": 11402,
									"name": "SSTORE"
								},
								{
									"begin": 11383,
									"end": 11402,
									"name": "POP"
								},
								{
									"begin": 11432,
									"end": 11444,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11432,
									"end": 11444,
									"name": "SLOAD"
								},
								{
									"begin": 11408,
									"end": 11417,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11418,
									"end": 11428,
									"name": "CALLER"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "AND"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "AND"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "DUP2"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "MSTORE"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "ADD"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "SWAP1"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "DUP2"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "MSTORE"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "ADD"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11408,
									"end": 11429,
									"name": "KECCAK256"
								},
								{
									"begin": 11408,
									"end": 11444,
									"name": "DUP2"
								},
								{
									"begin": 11408,
									"end": 11444,
									"name": "SWAP1"
								},
								{
									"begin": 11408,
									"end": 11444,
									"name": "SSTORE"
								},
								{
									"begin": 11408,
									"end": 11444,
									"name": "POP"
								},
								{
									"begin": 11477,
									"end": 11487,
									"name": "CALLER"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "AND"
								},
								{
									"begin": 11473,
									"end": 11474,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "AND"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11489,
									"end": 11501,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11489,
									"end": 11501,
									"name": "SLOAD"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "MLOAD"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "DUP1"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "DUP3"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "DUP2"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "MSTORE"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "ADD"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "SWAP2"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "POP"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "POP"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "MLOAD"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "DUP1"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "SWAP2"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "SUB"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "SWAP1"
								},
								{
									"begin": 11456,
									"end": 11502,
									"name": "LOG3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMPDEST"
								},
								{
									"begin": 3640,
									"end": 3655,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3670,
									"end": 3680,
									"name": "CALLER"
								},
								{
									"begin": 3663,
									"end": 3680,
									"name": "SWAP1"
								},
								{
									"begin": 3663,
									"end": 3680,
									"name": "POP"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "SWAP1"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SLOAD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "MUL"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SUB"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DIV"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "MSTORE"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "KECCAK256"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DIV"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "LT"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "MLOAD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "NOT"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP4"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "OR"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP6"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP6"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "GT"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "MLOAD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "GT"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "CODECOPY"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18518,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203a67717ba96b40b57efb9e895a49e633ccdd171b0f0b728cdae880d0a8dcd11964736f6c63430005100032",
									".code": [
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "MSTORE"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "POP"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "LT"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "SHR"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18518,
											"name": "REVERT"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "JUMPDEST"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "JUMPDEST"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MLOAD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "ADD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP3"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SUB"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP3"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MSTORE"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP4"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MLOAD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MSTORE"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "ADD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MLOAD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "ADD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP4"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "ADD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "AND"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "ISZERO"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "JUMPI"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP3"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SUB"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MLOAD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP4"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SUB"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "EXP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SUB"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "NOT"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "AND"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MSTORE"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "ADD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "JUMPDEST"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP3"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "MLOAD"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "DUP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP2"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SUB"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "RETURN"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "JUMPDEST"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP2"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ADD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "AND"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ADD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP3"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP2"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ADD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP3"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP2"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "JUMPDEST"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "MLOAD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP3"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ISZERO"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ISZERO"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ISZERO"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ISZERO"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP2"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "MSTORE"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "ADD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP2"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "MLOAD"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP2"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SUB"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP1"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "RETURN"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "JUMPDEST"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "JUMPDEST"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "MLOAD"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "DUP1"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "DUP3"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "DUP2"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "MSTORE"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "ADD"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "SWAP2"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "POP"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "POP"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "MLOAD"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "DUP1"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "SWAP2"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "SUB"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "SWAP1"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "RETURN"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "JUMPDEST"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP2"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ADD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "AND"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ADD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP3"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP2"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "AND"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ADD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP3"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP2"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ADD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP3"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP2"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "JUMPDEST"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "MLOAD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP3"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ISZERO"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ISZERO"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ISZERO"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ISZERO"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP2"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "MSTORE"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "ADD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP2"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "MLOAD"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "DUP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP2"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SUB"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP1"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "RETURN"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "JUMPDEST"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "JUMPDEST"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "MLOAD"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "DUP1"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "DUP3"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "AND"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "AND"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "DUP2"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "MSTORE"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "ADD"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "SWAP2"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "POP"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "POP"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "MLOAD"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "DUP1"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "SWAP2"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "SUB"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "SWAP1"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "RETURN"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "JUMPDEST"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP2"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ADD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "AND"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ADD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP3"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP2"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ADD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP3"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP2"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "JUMPDEST"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "MLOAD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP3"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ISZERO"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ISZERO"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ISZERO"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ISZERO"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP2"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "MSTORE"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "ADD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP2"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "MLOAD"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP2"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SUB"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "RETURN"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "JUMPDEST"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP2"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "ADD"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "AND"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "ADD"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP3"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP2"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "POP"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "POP"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "POP"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "JUMPDEST"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "MLOAD"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP3"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP2"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "MSTORE"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "ADD"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP2"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "POP"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "POP"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "MLOAD"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "DUP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP2"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SUB"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "RETURN"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "STOP"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "JUMPDEST"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "JUMPDEST"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "MLOAD"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "DUP1"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "DUP3"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "AND"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "AND"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "DUP2"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "MSTORE"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "ADD"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "SWAP2"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "POP"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "POP"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "MLOAD"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "DUP1"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "SWAP2"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "SUB"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "SWAP1"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "RETURN"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMPDEST"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMPDEST"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "MLOAD"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "DUP1"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "DUP3"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "AND"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "AND"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "DUP2"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "MSTORE"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "ADD"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "SWAP2"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "POP"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "POP"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "MLOAD"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "DUP1"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "SWAP2"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "SUB"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "SWAP1"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "RETURN"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "JUMPDEST"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "JUMPDEST"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MLOAD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "ADD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP3"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SUB"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP3"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MSTORE"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP4"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MLOAD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MSTORE"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "ADD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MLOAD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "ADD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP4"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "ADD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "AND"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "ISZERO"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "JUMPI"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP3"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SUB"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MLOAD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP4"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SUB"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "EXP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SUB"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "NOT"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "AND"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MSTORE"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "ADD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "JUMPDEST"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP3"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "MLOAD"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP2"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SUB"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "RETURN"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMPDEST"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP2"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ADD"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ADD"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP3"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP2"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "POP"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "POP"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "POP"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMPDEST"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "MLOAD"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP3"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ISZERO"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ISZERO"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ISZERO"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ISZERO"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP2"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "MSTORE"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "ADD"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP2"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "POP"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "POP"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "MLOAD"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "DUP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP2"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SUB"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "RETURN"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "JUMPDEST"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP2"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ADD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "AND"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ADD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP3"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP2"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ADD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP3"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP2"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "JUMPDEST"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "MLOAD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP3"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ISZERO"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ISZERO"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ISZERO"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ISZERO"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP2"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "MSTORE"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "ADD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP2"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "MLOAD"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "DUP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP2"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SUB"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP1"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "RETURN"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "JUMPDEST"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP2"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ADD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "AND"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ADD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP3"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP2"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ADD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP3"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP2"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "JUMPDEST"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "MLOAD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP3"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ISZERO"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ISZERO"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ISZERO"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ISZERO"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP2"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "MSTORE"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "ADD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP2"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "MLOAD"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "DUP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP2"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SUB"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP1"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "RETURN"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "JUMPDEST"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP2"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "ADD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "AND"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "ADD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP3"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP2"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "AND"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "ADD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP3"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP2"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "JUMPDEST"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "MLOAD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP3"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP2"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "MSTORE"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "ADD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP2"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "MLOAD"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "DUP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP2"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SUB"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP1"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "RETURN"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "DUP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "DUP2"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "ADD"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SWAP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "DUP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "DUP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "AND"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SWAP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "ADD"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SWAP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SWAP3"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SWAP2"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SWAP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "STOP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "JUMPDEST"
										},
										{
											"begin": 11991,
											"end": 12004,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12019,
											"end": 12024,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SLOAD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "AND"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ISZERO"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MUL"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SUB"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "AND"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DIV"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DIV"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MUL"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MLOAD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MSTORE"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP3"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MSTORE"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP3"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SLOAD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "AND"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ISZERO"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MUL"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SUB"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "AND"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DIV"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ISZERO"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "JUMPI"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "LT"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "JUMPI"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP4"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SLOAD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DIV"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MUL"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP4"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MSTORE"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "JUMP"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "JUMPDEST"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP3"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MSTORE"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "KECCAK256"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "JUMPDEST"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SLOAD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "MSTORE"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP4"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "GT"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "JUMPI"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP3"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SUB"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "AND"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "DUP3"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP2"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "JUMPDEST"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "SWAP1"
										},
										{
											"begin": 11952,
											"end": 12029,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "JUMPDEST"
										},
										{
											"begin": 13015,
											"end": 13019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13027,
											"end": 13066,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 13036,
											"end": 13046,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST"
										},
										{
											"begin": 13050,
											"end": 13057,
											"name": "DUP5"
										},
										{
											"begin": 13059,
											"end": 13065,
											"name": "DUP5"
										},
										{
											"begin": 13027,
											"end": 13035,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13027,
											"end": 13066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13027,
											"end": 13066,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 13027,
											"end": 13066,
											"name": "JUMPDEST"
										},
										{
											"begin": 13079,
											"end": 13083,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13072,
											"end": 13083,
											"name": "SWAP1"
										},
										{
											"begin": 13072,
											"end": 13083,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP3"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "SWAP2"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "POP"
										},
										{
											"begin": 12947,
											"end": 13088,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "JUMPDEST"
										},
										{
											"begin": 12126,
											"end": 12133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12148,
											"end": 12160,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12148,
											"end": 12160,
											"name": "SLOAD"
										},
										{
											"begin": 12141,
											"end": 12160,
											"name": "SWAP1"
										},
										{
											"begin": 12141,
											"end": 12160,
											"name": "POP"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "SWAP1"
										},
										{
											"begin": 12080,
											"end": 12165,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "JUMPDEST"
										},
										{
											"begin": 13610,
											"end": 13614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13622,
											"end": 13658,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 13632,
											"end": 13638,
											"name": "DUP5"
										},
										{
											"begin": 13640,
											"end": 13649,
											"name": "DUP5"
										},
										{
											"begin": 13651,
											"end": 13657,
											"name": "DUP5"
										},
										{
											"begin": 13622,
											"end": 13631,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 13622,
											"end": 13658,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13622,
											"end": 13658,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 13622,
											"end": 13658,
											"name": "JUMPDEST"
										},
										{
											"begin": 13664,
											"end": 13785,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 13673,
											"end": 13679,
											"name": "DUP5"
										},
										{
											"begin": 13681,
											"end": 13693,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 13681,
											"end": 13691,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13681,
											"end": 13693,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13681,
											"end": 13693,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 13681,
											"end": 13693,
											"name": "JUMPDEST"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13733,
											"end": 13739,
											"name": "DUP6"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "MLOAD"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "DUP1"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "ADD"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "MSTORE"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "DUP1"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "DUP2"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "MSTORE"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "ADD"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "SWAP2"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "CODECOPY"
										},
										{
											"begin": 13695,
											"end": 13706,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13707,
											"end": 13713,
											"name": "DUP12"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "AND"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "AND"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "DUP2"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "MSTORE"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "ADD"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "SWAP1"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "DUP2"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "MSTORE"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "ADD"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13695,
											"end": 13714,
											"name": "KECCAK256"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13715,
											"end": 13727,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 13715,
											"end": 13725,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13715,
											"end": 13727,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13715,
											"end": 13727,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 13715,
											"end": 13727,
											"name": "JUMPDEST"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "AND"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "AND"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "DUP2"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "MSTORE"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "ADD"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "SWAP1"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "DUP2"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "MSTORE"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "ADD"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "KECCAK256"
										},
										{
											"begin": 13695,
											"end": 13728,
											"name": "SLOAD"
										},
										{
											"begin": 13695,
											"end": 13732,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13695,
											"end": 13732,
											"name": "SWAP1"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "SWAP3"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "SWAP2"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "SWAP1"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "AND"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 13695,
											"end": 13784,
											"name": "JUMPDEST"
										},
										{
											"begin": 13664,
											"end": 13672,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13664,
											"end": 13785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13664,
											"end": 13785,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 13664,
											"end": 13785,
											"name": "JUMPDEST"
										},
										{
											"begin": 13798,
											"end": 13802,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13791,
											"end": 13802,
											"name": "SWAP1"
										},
										{
											"begin": 13791,
											"end": 13802,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP4"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "SWAP3"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "POP"
										},
										{
											"begin": 13519,
											"end": 13807,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "JUMPDEST"
										},
										{
											"begin": 11737,
											"end": 11742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "SWAP1"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "SLOAD"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "SWAP1"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "EXP"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "SWAP1"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "DIV"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11757,
											"end": 11766,
											"name": "AND"
										},
										{
											"begin": 11750,
											"end": 11766,
											"name": "SWAP1"
										},
										{
											"begin": 11750,
											"end": 11766,
											"name": "POP"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "SWAP1"
										},
										{
											"begin": 11694,
											"end": 11771,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "JUMPDEST"
										},
										{
											"begin": 14255,
											"end": 14259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14267,
											"end": 14350,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 14276,
											"end": 14288,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 14276,
											"end": 14286,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14276,
											"end": 14288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14276,
											"end": 14288,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 14276,
											"end": 14288,
											"name": "JUMPDEST"
										},
										{
											"begin": 14290,
											"end": 14297,
											"name": "DUP5"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 14338,
											"end": 14348,
											"name": "DUP6"
										},
										{
											"begin": 14299,
											"end": 14310,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14311,
											"end": 14323,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 14311,
											"end": 14321,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14311,
											"end": 14323,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14311,
											"end": 14323,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 14311,
											"end": 14323,
											"name": "JUMPDEST"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "AND"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "AND"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "DUP2"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "MSTORE"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "ADD"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "SWAP1"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "DUP2"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "MSTORE"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "ADD"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 14324,
											"name": "KECCAK256"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14332,
											"name": "DUP10"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "AND"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "AND"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "DUP2"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "MSTORE"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "ADD"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "SWAP1"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "DUP2"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "MSTORE"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "ADD"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "KECCAK256"
										},
										{
											"begin": 14299,
											"end": 14333,
											"name": "SLOAD"
										},
										{
											"begin": 14299,
											"end": 14337,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14299,
											"end": 14337,
											"name": "SWAP1"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "SWAP2"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "SWAP1"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "AND"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "JUMPDEST"
										},
										{
											"begin": 14267,
											"end": 14275,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 14267,
											"end": 14350,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14267,
											"end": 14350,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 14267,
											"end": 14350,
											"name": "JUMPDEST"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14356,
											"end": 14367,
											"name": "SWAP1"
										},
										{
											"begin": 14356,
											"end": 14367,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP3"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "SWAP2"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "POP"
										},
										{
											"begin": 14175,
											"end": 14372,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "JUMPDEST"
										},
										{
											"begin": 12273,
											"end": 12280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12304,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12312,
											"name": "DUP4"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "AND"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "AND"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "DUP2"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "MSTORE"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "ADD"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "SWAP1"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "DUP2"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "MSTORE"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "ADD"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "KECCAK256"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "SLOAD"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "POP"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP2"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "SWAP1"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "POP"
										},
										{
											"begin": 12214,
											"end": 12318,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "EXP"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DIV"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "AND"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SLOAD"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "EXP"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DIV"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "AND"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "AND"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "MLOAD"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "MLOAD"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "DUP1"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "SWAP2"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "SUB"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "SWAP1"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "LOG3"
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10402,
											"name": "DUP1"
										},
										{
											"begin": 10396,
											"end": 10402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "EXP"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "DUP2"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SLOAD"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "DUP2"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "MUL"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "NOT"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "AND"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SWAP1"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "DUP4"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "AND"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "MUL"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "OR"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SWAP1"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SSTORE"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "POP"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "JUMPDEST"
										},
										{
											"begin": 11606,
											"end": 11613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11628,
											"end": 11635,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 11628,
											"end": 11633,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 11628,
											"end": 11635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11628,
											"end": 11635,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 11628,
											"end": 11635,
											"name": "JUMPDEST"
										},
										{
											"begin": 11621,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11621,
											"end": 11635,
											"name": "POP"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "SWAP1"
										},
										{
											"begin": 11563,
											"end": 11640,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMPDEST"
										},
										{
											"begin": 9748,
											"end": 9755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "DUP1"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "SWAP1"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "SLOAD"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "SWAP1"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "EXP"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "SWAP1"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "DIV"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "AND"
										},
										{
											"begin": 9763,
											"end": 9776,
											"name": "SWAP1"
										},
										{
											"begin": 9763,
											"end": 9776,
											"name": "POP"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "SWAP1"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "JUMPDEST"
										},
										{
											"begin": 11864,
											"end": 11877,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11892,
											"end": 11899,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SLOAD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "AND"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ISZERO"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MUL"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SUB"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "AND"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DIV"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DIV"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MUL"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MLOAD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MSTORE"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP3"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MSTORE"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP3"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SLOAD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "AND"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ISZERO"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MUL"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SUB"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "AND"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DIV"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ISZERO"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMPI"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "LT"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMPI"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP4"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SLOAD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DIV"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MUL"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP4"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MSTORE"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMP"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMPDEST"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP3"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MSTORE"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "KECCAK256"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMPDEST"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SLOAD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "MSTORE"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP4"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "GT"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMPI"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP3"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SUB"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "AND"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP3"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP2"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMPDEST"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "POP"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "POP"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "POP"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "POP"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "POP"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "POP"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "SWAP1"
										},
										{
											"begin": 11823,
											"end": 11904,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMPDEST"
										},
										{
											"begin": 15322,
											"end": 15326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "EXP"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DIV"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 15334,
											"end": 15361,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 15340,
											"end": 15352,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 15340,
											"end": 15350,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15340,
											"end": 15352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15340,
											"end": 15352,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 15340,
											"end": 15352,
											"name": "JUMPDEST"
										},
										{
											"begin": 15354,
											"end": 15360,
											"name": "DUP4"
										},
										{
											"begin": 15334,
											"end": 15339,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15334,
											"end": 15361,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15334,
											"end": 15361,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 15334,
											"end": 15361,
											"name": "JUMPDEST"
										},
										{
											"begin": 15374,
											"end": 15378,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15367,
											"end": 15378,
											"name": "SWAP1"
										},
										{
											"begin": 15367,
											"end": 15378,
											"name": "POP"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP2"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "SWAP1"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "POP"
										},
										{
											"begin": 15266,
											"end": 15383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "JUMPDEST"
										},
										{
											"begin": 14913,
											"end": 14917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 15054,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 14934,
											"end": 14946,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 14934,
											"end": 14944,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14934,
											"end": 14946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14934,
											"end": 14946,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 14934,
											"end": 14946,
											"name": "JUMPDEST"
										},
										{
											"begin": 14948,
											"end": 14955,
											"name": "DUP5"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 14996,
											"end": 15011,
											"name": "DUP6"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "MLOAD"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "DUP1"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "ADD"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "MSTORE"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "DUP1"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "DUP2"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "MSTORE"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "ADD"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "SWAP2"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "CODECOPY"
										},
										{
											"begin": 14957,
											"end": 14968,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14969,
											"end": 14981,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 14969,
											"end": 14979,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14969,
											"end": 14981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14969,
											"end": 14981,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 14969,
											"end": 14981,
											"name": "JUMPDEST"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "AND"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "AND"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "DUP2"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "MSTORE"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "ADD"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "SWAP1"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "DUP2"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "MSTORE"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "ADD"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14982,
											"name": "KECCAK256"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14983,
											"end": 14990,
											"name": "DUP11"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "AND"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "AND"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "DUP2"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "MSTORE"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "ADD"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "SWAP1"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "DUP2"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "MSTORE"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "ADD"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "KECCAK256"
										},
										{
											"begin": 14957,
											"end": 14991,
											"name": "SLOAD"
										},
										{
											"begin": 14957,
											"end": 14995,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 14957,
											"end": 14995,
											"name": "SWAP1"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "SWAP3"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "SWAP2"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "SWAP1"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "AND"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 14957,
											"end": 15053,
											"name": "JUMPDEST"
										},
										{
											"begin": 14925,
											"end": 14933,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 14925,
											"end": 15054,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14925,
											"end": 15054,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 14925,
											"end": 15054,
											"name": "JUMPDEST"
										},
										{
											"begin": 15067,
											"end": 15071,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15060,
											"end": 15071,
											"name": "SWAP1"
										},
										{
											"begin": 15060,
											"end": 15071,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP3"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "SWAP2"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "POP"
										},
										{
											"begin": 14828,
											"end": 15076,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "JUMPDEST"
										},
										{
											"begin": 12573,
											"end": 12577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12585,
											"end": 12627,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 12595,
											"end": 12607,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 12595,
											"end": 12605,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 12595,
											"end": 12607,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12595,
											"end": 12607,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 12595,
											"end": 12607,
											"name": "JUMPDEST"
										},
										{
											"begin": 12609,
											"end": 12618,
											"name": "DUP5"
										},
										{
											"begin": 12620,
											"end": 12626,
											"name": "DUP5"
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 12585,
											"end": 12627,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12585,
											"end": 12627,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 12585,
											"end": 12627,
											"name": "JUMPDEST"
										},
										{
											"begin": 12640,
											"end": 12644,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12633,
											"end": 12644,
											"name": "SWAP1"
										},
										{
											"begin": 12633,
											"end": 12644,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP3"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "SWAP2"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "POP"
										},
										{
											"begin": 12502,
											"end": 12649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "JUMPDEST"
										},
										{
											"begin": 12772,
											"end": 12779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12805,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12806,
											"end": 12811,
											"name": "DUP5"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "AND"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "AND"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "DUP2"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "MSTORE"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "ADD"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "SWAP1"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "DUP2"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "MSTORE"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "ADD"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "KECCAK256"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12820,
											"name": "DUP4"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "AND"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "AND"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "DUP2"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "MSTORE"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "ADD"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "SWAP1"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "DUP2"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "MSTORE"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "ADD"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "KECCAK256"
										},
										{
											"begin": 12794,
											"end": 12821,
											"name": "SLOAD"
										},
										{
											"begin": 12787,
											"end": 12821,
											"name": "SWAP1"
										},
										{
											"begin": 12787,
											"end": 12821,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP3"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "SWAP2"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "POP"
										},
										{
											"begin": 12698,
											"end": 12826,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMPDEST"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "EXP"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DIV"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "POP"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 10646,
											"end": 10654,
											"name": "DUP2"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "JUMPDEST"
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3680,
											"name": "CALLER"
										},
										{
											"begin": 3663,
											"end": 3680,
											"name": "SWAP1"
										},
										{
											"begin": 3663,
											"end": 3680,
											"name": "POP"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17819,
											"end": 18133,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 17819,
											"end": 18133,
											"name": "JUMPDEST"
										},
										{
											"begin": 17925,
											"end": 17926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17908,
											"end": 17927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17908,
											"end": 17927,
											"name": "AND"
										},
										{
											"begin": 17908,
											"end": 17913,
											"name": "DUP4"
										},
										{
											"begin": 17908,
											"end": 17927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17908,
											"end": 17927,
											"name": "AND"
										},
										{
											"begin": 17908,
											"end": 17927,
											"name": "EQ"
										},
										{
											"begin": 17908,
											"end": 17927,
											"name": "ISZERO"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "JUMPI"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "MLOAD"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP2"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "MSTORE"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "ADD"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP1"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP1"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "ADD"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP3"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP2"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "SUB"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP3"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "MSTORE"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP2"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "MSTORE"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "ADD"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP1"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "SWAP2"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "CODECOPY"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "ADD"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "SWAP2"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "POP"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "POP"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "MLOAD"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "DUP1"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "SWAP2"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "SUB"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "SWAP1"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "REVERT"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 17900,
											"end": 17968,
											"name": "JUMPDEST"
										},
										{
											"begin": 18001,
											"end": 18002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17982,
											"end": 18003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17982,
											"end": 18003,
											"name": "AND"
										},
										{
											"begin": 17982,
											"end": 17989,
											"name": "DUP3"
										},
										{
											"begin": 17982,
											"end": 18003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17982,
											"end": 18003,
											"name": "AND"
										},
										{
											"begin": 17982,
											"end": 18003,
											"name": "EQ"
										},
										{
											"begin": 17982,
											"end": 18003,
											"name": "ISZERO"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "JUMPI"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "MLOAD"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP2"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "MSTORE"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "ADD"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP1"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP1"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "ADD"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP3"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP2"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "SUB"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP3"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "MSTORE"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP2"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "MSTORE"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "ADD"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP1"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "SWAP2"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "CODECOPY"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "ADD"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "SWAP2"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "POP"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "POP"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "MLOAD"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "DUP1"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "SWAP2"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "SUB"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "SWAP1"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "REVERT"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 17974,
											"end": 18042,
											"name": "JUMPDEST"
										},
										{
											"begin": 18079,
											"end": 18085,
											"name": "DUP1"
										},
										{
											"begin": 18049,
											"end": 18060,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18061,
											"end": 18066,
											"name": "DUP6"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "AND"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "AND"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "DUP2"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "MSTORE"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "ADD"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "SWAP1"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "DUP2"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "MSTORE"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "ADD"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18049,
											"end": 18067,
											"name": "KECCAK256"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18068,
											"end": 18075,
											"name": "DUP5"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "AND"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "AND"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "DUP2"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "MSTORE"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "ADD"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "SWAP1"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "DUP2"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "MSTORE"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "ADD"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18049,
											"end": 18076,
											"name": "KECCAK256"
										},
										{
											"begin": 18049,
											"end": 18085,
											"name": "DUP2"
										},
										{
											"begin": 18049,
											"end": 18085,
											"name": "SWAP1"
										},
										{
											"begin": 18049,
											"end": 18085,
											"name": "SSTORE"
										},
										{
											"begin": 18049,
											"end": 18085,
											"name": "POP"
										},
										{
											"begin": 18112,
											"end": 18119,
											"name": "DUP2"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "AND"
										},
										{
											"begin": 18105,
											"end": 18110,
											"name": "DUP4"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "AND"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18121,
											"end": 18127,
											"name": "DUP4"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "MLOAD"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "DUP1"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "DUP3"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "DUP2"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "MSTORE"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "ADD"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "SWAP2"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "POP"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "POP"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "MLOAD"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "DUP1"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "SWAP2"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "SUB"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "SWAP1"
										},
										{
											"begin": 18096,
											"end": 18128,
											"name": "LOG3"
										},
										{
											"begin": 17819,
											"end": 18133,
											"name": "POP"
										},
										{
											"begin": 17819,
											"end": 18133,
											"name": "POP"
										},
										{
											"begin": 17819,
											"end": 18133,
											"name": "POP"
										},
										{
											"begin": 17819,
											"end": 18133,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15827,
											"end": 16269,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 15827,
											"end": 16269,
											"name": "JUMPDEST"
										},
										{
											"begin": 15938,
											"end": 15939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15920,
											"end": 15940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15920,
											"end": 15940,
											"name": "AND"
										},
										{
											"begin": 15920,
											"end": 15926,
											"name": "DUP4"
										},
										{
											"begin": 15920,
											"end": 15940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15920,
											"end": 15940,
											"name": "AND"
										},
										{
											"begin": 15920,
											"end": 15940,
											"name": "EQ"
										},
										{
											"begin": 15920,
											"end": 15940,
											"name": "ISZERO"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "JUMPI"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "MLOAD"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP2"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "MSTORE"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "ADD"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP1"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP1"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "ADD"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP3"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP2"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "SUB"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP3"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "MSTORE"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP2"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "MSTORE"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "ADD"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP1"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "SWAP2"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "CODECOPY"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "ADD"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "SWAP2"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "POP"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "POP"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "MLOAD"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "DUP1"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "SWAP2"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "SUB"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "SWAP1"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "REVERT"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 15912,
											"end": 15982,
											"name": "JUMPDEST"
										},
										{
											"begin": 16017,
											"end": 16018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "AND"
										},
										{
											"begin": 15996,
											"end": 16005,
											"name": "DUP3"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "AND"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "EQ"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "ISZERO"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "JUMPI"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "MLOAD"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP2"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "MSTORE"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "ADD"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP1"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP1"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "ADD"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP3"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP2"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "SUB"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP3"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "MSTORE"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP2"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "MSTORE"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "ADD"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP1"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "SWAP2"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "CODECOPY"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "ADD"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "SWAP2"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "POP"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "POP"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "MLOAD"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "DUP1"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "SWAP2"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "SUB"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "SWAP1"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "REVERT"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 15988,
											"end": 16059,
											"name": "JUMPDEST"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16108,
											"end": 16114,
											"name": "DUP2"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "MLOAD"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "DUP1"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "MSTORE"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "DUP1"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "DUP2"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "MSTORE"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "SWAP2"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "CODECOPY"
										},
										{
											"begin": 16086,
											"end": 16095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16096,
											"end": 16102,
											"name": "DUP8"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "AND"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "AND"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "DUP2"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "MSTORE"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "DUP2"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "MSTORE"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "KECCAK256"
										},
										{
											"begin": 16086,
											"end": 16103,
											"name": "SLOAD"
										},
										{
											"begin": 16086,
											"end": 16107,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 16086,
											"end": 16107,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "SWAP3"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "SWAP2"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "AND"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16086,
											"end": 16157,
											"name": "JUMPDEST"
										},
										{
											"begin": 16066,
											"end": 16075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16076,
											"end": 16082,
											"name": "DUP6"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "AND"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "AND"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "DUP2"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "MSTORE"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "ADD"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "SWAP1"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "DUP2"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "MSTORE"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "ADD"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "KECCAK256"
										},
										{
											"begin": 16066,
											"end": 16157,
											"name": "DUP2"
										},
										{
											"begin": 16066,
											"end": 16157,
											"name": "SWAP1"
										},
										{
											"begin": 16066,
											"end": 16157,
											"name": "SSTORE"
										},
										{
											"begin": 16066,
											"end": 16157,
											"name": "POP"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 16211,
											"end": 16217,
											"name": "DUP2"
										},
										{
											"begin": 16186,
											"end": 16195,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16196,
											"end": 16205,
											"name": "DUP6"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "AND"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "AND"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "DUP2"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "MSTORE"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "ADD"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "SWAP1"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "DUP2"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "MSTORE"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "ADD"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "KECCAK256"
										},
										{
											"begin": 16186,
											"end": 16206,
											"name": "SLOAD"
										},
										{
											"begin": 16186,
											"end": 16210,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16186,
											"end": 16210,
											"name": "SWAP1"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "SWAP2"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "SWAP1"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "AND"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16186,
											"end": 16218,
											"name": "JUMPDEST"
										},
										{
											"begin": 16163,
											"end": 16172,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16173,
											"end": 16182,
											"name": "DUP5"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "AND"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "AND"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "DUP2"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "MSTORE"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "ADD"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "SWAP1"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "DUP2"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "MSTORE"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "ADD"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "KECCAK256"
										},
										{
											"begin": 16163,
											"end": 16218,
											"name": "DUP2"
										},
										{
											"begin": 16163,
											"end": 16218,
											"name": "SWAP1"
										},
										{
											"begin": 16163,
											"end": 16218,
											"name": "SSTORE"
										},
										{
											"begin": 16163,
											"end": 16218,
											"name": "POP"
										},
										{
											"begin": 16246,
											"end": 16255,
											"name": "DUP2"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "AND"
										},
										{
											"begin": 16238,
											"end": 16244,
											"name": "DUP4"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "AND"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16257,
											"end": 16263,
											"name": "DUP4"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "MLOAD"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "DUP1"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "DUP3"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "DUP2"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "MSTORE"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "ADD"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "SWAP2"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "POP"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "POP"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "MLOAD"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "DUP1"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "SWAP2"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "SUB"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "SWAP1"
										},
										{
											"begin": 16229,
											"end": 16264,
											"name": "LOG3"
										},
										{
											"begin": 15827,
											"end": 16269,
											"name": "POP"
										},
										{
											"begin": 15827,
											"end": 16269,
											"name": "POP"
										},
										{
											"begin": 15827,
											"end": 16269,
											"name": "POP"
										},
										{
											"begin": 15827,
											"end": 16269,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "JUMPDEST"
										},
										{
											"begin": 5578,
											"end": 5585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "DUP4"
										},
										{
											"begin": 5601,
											"end": 5602,
											"name": "DUP4"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "GT"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "ISZERO"
										},
										{
											"begin": 5609,
											"end": 5621,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPI"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "AND"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ISZERO"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPI"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "EXP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "NOT"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "AND"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPDEST"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "REVERT"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPDEST"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5645,
											"name": "DUP4"
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "DUP6"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "SUB"
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "DUP1"
										},
										{
											"begin": 5652,
											"end": 5660,
											"name": "SWAP2"
										},
										{
											"begin": 5652,
											"end": 5660,
											"name": "POP"
										},
										{
											"begin": 5652,
											"end": 5660,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "SWAP4"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "SWAP3"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP1"
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "DUP3"
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "DUP5"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "ADD"
										},
										{
											"begin": 4767,
											"end": 4784,
											"name": "SWAP1"
										},
										{
											"begin": 4767,
											"end": 4784,
											"name": "POP"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "DUP4"
										},
										{
											"begin": 4798,
											"end": 4799,
											"name": "DUP2"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "LT"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "ISZERO"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "JUMPI"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SUB"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SUB"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "REVERT"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "JUMPDEST"
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "DUP1"
										},
										{
											"begin": 4843,
											"end": 4851,
											"name": "SWAP2"
										},
										{
											"begin": 4843,
											"end": 4851,
											"name": "POP"
										},
										{
											"begin": 4843,
											"end": 4851,
											"name": "POP"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "SWAP3"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "SWAP2"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16519,
											"end": 16803,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 16519,
											"end": 16803,
											"name": "JUMPDEST"
										},
										{
											"begin": 16609,
											"end": 16610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16590,
											"end": 16611,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16590,
											"end": 16611,
											"name": "AND"
										},
										{
											"begin": 16590,
											"end": 16597,
											"name": "DUP3"
										},
										{
											"begin": 16590,
											"end": 16611,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16590,
											"end": 16611,
											"name": "AND"
										},
										{
											"begin": 16590,
											"end": 16611,
											"name": "EQ"
										},
										{
											"begin": 16590,
											"end": 16611,
											"name": "ISZERO"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "JUMPI"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "MLOAD"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP2"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "MSTORE"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "ADD"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP1"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP1"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "ADD"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP3"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP2"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "SUB"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP3"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "MSTORE"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP2"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "MSTORE"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "ADD"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP1"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP2"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "MSTORE"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "POP"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "ADD"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "SWAP2"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "POP"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "POP"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "MLOAD"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "DUP1"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "SWAP2"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "SUB"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "SWAP1"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "REVERT"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 16582,
											"end": 16647,
											"name": "JUMPDEST"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 16686,
											"end": 16692,
											"name": "DUP2"
										},
										{
											"begin": 16669,
											"end": 16681,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16669,
											"end": 16681,
											"name": "SLOAD"
										},
										{
											"begin": 16669,
											"end": 16685,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16669,
											"end": 16685,
											"name": "SWAP1"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "SWAP2"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "SWAP1"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "AND"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "JUMPDEST"
										},
										{
											"begin": 16654,
											"end": 16666,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16654,
											"end": 16693,
											"name": "DUP2"
										},
										{
											"begin": 16654,
											"end": 16693,
											"name": "SWAP1"
										},
										{
											"begin": 16654,
											"end": 16693,
											"name": "SSTORE"
										},
										{
											"begin": 16654,
											"end": 16693,
											"name": "POP"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 16743,
											"end": 16749,
											"name": "DUP2"
										},
										{
											"begin": 16720,
											"end": 16729,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16730,
											"end": 16737,
											"name": "DUP6"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "AND"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "AND"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "DUP2"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "MSTORE"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "ADD"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "SWAP1"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "DUP2"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "MSTORE"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "ADD"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "KECCAK256"
										},
										{
											"begin": 16720,
											"end": 16738,
											"name": "SLOAD"
										},
										{
											"begin": 16720,
											"end": 16742,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16720,
											"end": 16742,
											"name": "SWAP1"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "SWAP2"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "SWAP1"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "AND"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 16720,
											"end": 16750,
											"name": "JUMPDEST"
										},
										{
											"begin": 16699,
											"end": 16708,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16709,
											"end": 16716,
											"name": "DUP5"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "AND"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "AND"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "DUP2"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "MSTORE"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "ADD"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "SWAP1"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "DUP2"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "MSTORE"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "ADD"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "KECCAK256"
										},
										{
											"begin": 16699,
											"end": 16750,
											"name": "DUP2"
										},
										{
											"begin": 16699,
											"end": 16750,
											"name": "SWAP1"
										},
										{
											"begin": 16699,
											"end": 16750,
											"name": "SSTORE"
										},
										{
											"begin": 16699,
											"end": 16750,
											"name": "POP"
										},
										{
											"begin": 16782,
											"end": 16789,
											"name": "DUP2"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "AND"
										},
										{
											"begin": 16778,
											"end": 16779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "AND"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16791,
											"end": 16797,
											"name": "DUP4"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "MLOAD"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "DUP1"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "DUP3"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "DUP2"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "MSTORE"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "ADD"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP2"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "POP"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "POP"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "MLOAD"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "DUP1"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP2"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SUB"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP1"
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "LOG3"
										},
										{
											"begin": 16519,
											"end": 16803,
											"name": "POP"
										},
										{
											"begin": 16519,
											"end": 16803,
											"name": "POP"
										},
										{
											"begin": 16519,
											"end": 16803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "JUMPDEST"
										},
										{
											"begin": 10842,
											"end": 10843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "AND"
										},
										{
											"begin": 10822,
											"end": 10830,
											"name": "DUP2"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "AND"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "EQ"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "ISZERO"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "JUMPI"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MLOAD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP3"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SUB"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP3"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "CODECOPY"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "POP"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "POP"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MLOAD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SUB"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "REVERT"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "JUMPDEST"
										},
										{
											"begin": 10927,
											"end": 10935,
											"name": "DUP1"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "AND"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DUP1"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SLOAD"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "EXP"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DIV"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "AND"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "AND"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "MLOAD"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "MLOAD"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "DUP1"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "SWAP2"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "SUB"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "SWAP1"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "LOG3"
										},
										{
											"begin": 10951,
											"end": 10959,
											"name": "DUP1"
										},
										{
											"begin": 10942,
											"end": 10948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 10948,
											"name": "DUP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "EXP"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "DUP2"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SLOAD"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "DUP2"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "MUL"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "NOT"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "AND"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "DUP4"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "AND"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "MUL"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "OR"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SSTORE"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "POP"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "POP"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B20T-wfgh.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B20T-wfgh.sol\":{\"keccak256\":\"0xc98bb09410e2e690e9b3376f1137ec2ea74dd03f762effefb4caa7dd59a05d83\",\"urls\":[\"bzz-raw://6c4cd55705d140408eee05235145c99b34af36cfe6ba036c7a492ad74db3072a\",\"dweb:/ipfs/Qmd9u788Qp4VhJ6MbL1GRapnvmYTJ5wQL3hXVCmkdZGAoy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "B20T-wfgh.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "B20T-wfgh.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "B20T-wfgh.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "B20T-wfgh.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "B20T-wfgh.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "B20T-wfgh.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "B20T-wfgh.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B20T-wfgh.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B20T-wfgh.sol\":{\"keccak256\":\"0xc98bb09410e2e690e9b3376f1137ec2ea74dd03f762effefb4caa7dd59a05d83\",\"urls\":[\"bzz-raw://6c4cd55705d140408eee05235145c99b34af36cfe6ba036c7a492ad74db3072a\",\"dweb:/ipfs/Qmd9u788Qp4VhJ6MbL1GRapnvmYTJ5wQL3hXVCmkdZGAoy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B20T-wfgh.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B20T-wfgh.sol\":{\"keccak256\":\"0xc98bb09410e2e690e9b3376f1137ec2ea74dd03f762effefb4caa7dd59a05d83\",\"urls\":[\"bzz-raw://6c4cd55705d140408eee05235145c99b34af36cfe6ba036c7a492ad74db3072a\",\"dweb:/ipfs/Qmd9u788Qp4VhJ6MbL1GRapnvmYTJ5wQL3hXVCmkdZGAoy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B20T-wfgh.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B20T-wfgh.sol\":{\"keccak256\":\"0xc98bb09410e2e690e9b3376f1137ec2ea74dd03f762effefb4caa7dd59a05d83\",\"urls\":[\"bzz-raw://6c4cd55705d140408eee05235145c99b34af36cfe6ba036c7a492ad74db3072a\",\"dweb:/ipfs/Qmd9u788Qp4VhJ6MbL1GRapnvmYTJ5wQL3hXVCmkdZGAoy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "B20T-wfgh.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"B20T-wfgh.sol\":4469:8763  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"B20T-wfgh.sol\":4469:8763  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158203b4f251c3a341af43c12b712aee8af69c9a233b38f6f927bc03eb38650f6e98a64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203b4f251c3a341af43c12b712aee8af69c9a233b38f6f927bc03eb38650f6e98a64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 EXTCODESIZE 0x4F 0x25 SHR GASPRICE CALLVALUE BYTE DELEGATECALL EXTCODECOPY SLT 0xB7 SLT 0xAE 0xE8 0xAF PUSH10 0xC9A233B38F6F927BC03E 0xB3 DUP7 POP 0xF6 0xE9 DUP11 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4469:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203b4f251c3a341af43c12b712aee8af69c9a233b38f6f927bc03eb38650f6e98a64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 EXTCODESIZE 0x4F 0x25 SHR GASPRICE CALLVALUE BYTE DELEGATECALL EXTCODECOPY SLT 0xB7 SLT 0xAE 0xE8 0xAF PUSH10 0xC9A233B38F6F927BC03E 0xB3 DUP7 POP 0xF6 0xE9 DUP11 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4469:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4469,
									"end": 8763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4469,
									"end": 8763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203b4f251c3a341af43c12b712aee8af69c9a233b38f6f927bc03eb38650f6e98a64736f6c63430005100032",
									".code": [
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "ADDRESS"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "EQ"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "MSTORE"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "DUP1"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B20T-wfgh.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B20T-wfgh.sol\":{\"keccak256\":\"0xc98bb09410e2e690e9b3376f1137ec2ea74dd03f762effefb4caa7dd59a05d83\",\"urls\":[\"bzz-raw://6c4cd55705d140408eee05235145c99b34af36cfe6ba036c7a492ad74db3072a\",\"dweb:/ipfs/Qmd9u788Qp4VhJ6MbL1GRapnvmYTJ5wQL3hXVCmkdZGAoy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"B20T-wfgh.sol": {
				"ast": {
					"absolutePath": "B20T-wfgh.sol",
					"exportedSymbols": {
						"BEP20Token": [
							899
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 900,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "157:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "156:9:0"
									},
									"scope": 88,
									"src": "111:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "263:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "262:7:0"
									},
									"scope": 88,
									"src": "220:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "363:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "362:15:0"
									},
									"scope": 88,
									"src": "322:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "465:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:15:0"
									},
									"scope": 88,
									"src": "426:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:9:0"
									},
									"scope": 88,
									"src": "535:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "720:9:0"
									},
									"scope": 88,
									"src": "662:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "952:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "951:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1005:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1004:6:0"
									},
									"scope": 88,
									"src": "934:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1288:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1345:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:9:0"
									},
									"scope": 88,
									"src": "1270:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1994:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1993:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2044:6:0"
									},
									"scope": 88,
									"src": "1977:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2360:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2376:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2395:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2359:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2429:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:6:0"
									},
									"scope": 88,
									"src": "2338:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2605:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2627:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2647:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2604:57:0"
									},
									"src": "2590:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2826:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2849:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2874:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2825:63:0"
									},
									"src": "2811:78:0"
								}
							],
							"scope": 900,
							"src": "25:2866:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3588:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3588:0:0"
									},
									"scope": 113,
									"src": "3564:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3657:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3670:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3663:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3614:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3640:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3639:17:0"
									},
									"scope": 113,
									"src": "3595:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3746:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "3752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3752:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3888:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3888:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3881:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3706:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3732:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3731:14:0"
									},
									"scope": 113,
									"src": "3689:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "3393:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4761:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4767:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4798:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4806:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4850:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4843:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4707:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4718:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4706:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4752:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4751:9:0"
									},
									"scope": 298,
									"src": "4694:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5167:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5190:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5180:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5180:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5173:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5113:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5124:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5112:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5157:9:0"
									},
									"scope": 298,
									"src": "5100:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5587:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5601:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5609:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "5593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5593:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5593:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5628:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5640:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5644:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5640:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5628:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5659:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5652:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5505:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5516:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5527:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5504:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5577:9:0"
									},
									"scope": 298,
									"src": "5492:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5952:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6173:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6164:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6176:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6191:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6184:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6205:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6217:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6221:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6217:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6205:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6236:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6236:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6245:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6248:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "6228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6228:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6228:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6298:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6291:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5909:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5897:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5942:9:0"
									},
									"scope": 298,
									"src": "5885:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6802:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6819:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6822:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6825:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6815:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6815:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6808:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6748:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6747:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6793:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6792:9:0"
									},
									"scope": 298,
									"src": "6735:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7405:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7485:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7488:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "7473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7473:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7473:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7507:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7519:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7523:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7507:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7620:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7613:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7323:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7334:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7345:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7345:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7395:9:0"
									},
									"scope": 298,
									"src": "7310:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8113:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8130:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8133:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8136:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8126:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8126:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8119:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8059:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8070:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8058:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8103:9:0"
									},
									"scope": 298,
									"src": "8046:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8703:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8722:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8725:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "8709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8709:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8709:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8751:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8744:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8621:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8632:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8643:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8643:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8620:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8693:9:0"
									},
									"scope": 298,
									"src": "8608:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "4469:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9280:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9280:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9292:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9292:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9346:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9377:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9345:57:0"
									},
									"src": "9319:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9521:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9527:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9527:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9547:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9547:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9527:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9565:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9565:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9565:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9623:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9627:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9594:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9594:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9589:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9509:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9521:0:0"
									},
									"scope": 404,
									"src": "9497:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9757:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9770:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9763:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9724:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9747:9:0"
									},
									"scope": 404,
									"src": "9710:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9882:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9896:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9906:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9906:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9896:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9920:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "9888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9888:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "9961:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9879:2:0"
									},
									"src": "9861:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10339:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10387:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10379:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10350:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10345:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10413:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10405:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10396:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10396:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10329:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10329:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10319:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10339:0:0"
									},
									"scope": 404,
									"src": "10293:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10621:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10646:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10627:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10627:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10611:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10611:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10586:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10585:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10621:0:0"
									},
									"scope": 404,
									"src": "10559:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10808:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10822:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10842:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10822:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10846:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "10814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10814:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10814:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10927:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10898:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10893:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "10951:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10942:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "10942:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10781:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10780:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10808:0:0"
									},
									"scope": 404,
									"src": "10753:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "9260:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "10991:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "10991:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11000:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11000:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11008:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11008:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 899,
							"linearizedBaseContracts": [
								899,
								404,
								88,
								113
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11026:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11020:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11039:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11051:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11060:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11051:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11071:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11102:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11102:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11131:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11122:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11142:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11176:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11176:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11208:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11208:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11235:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11235:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11261:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11261:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11307:200:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11313:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "57464748204361706974616c",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11321:14:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_d337b4c883105e2343c3cad5be97a23f074ecfa950966a898671bfce38d8cb92",
															"typeString": "literal_string \"WFGH Capital\""
														},
														"value": "WFGH Capital"
													},
													"src": "11313:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11313:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "57464748",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11351:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_687434544099a3fb650e41463958f32c281a555bd221bdf622464a3105e4bb46",
															"typeString": "literal_string \"WFGH\""
														},
														"value": "WFGH"
													},
													"src": "11341:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11341:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11363:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11375:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11363:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11363:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11383:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "35373433",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11398:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5743_by_1",
															"typeString": "int_const 5743"
														},
														"value": "5743"
													},
													"src": "11383:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11383:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11408:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11418:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11418:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11408:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11432:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11408:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "11408:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11473:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11465:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11477:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11489:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11456:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11456:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11451:51:0"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11297:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11307:0:0"
									},
									"scope": 899,
									"src": "11286:221:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "11615:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11628:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "11621:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11580:2:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "11606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11605:9:0"
									},
									"scope": 899,
									"src": "11563:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "11744:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11757:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "11750:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11711:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11737:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11737:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11736:7:0"
									},
									"scope": 899,
									"src": "11694:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "11879:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "11885:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11838:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "11864:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11864:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11863:15:0"
									},
									"scope": 899,
									"src": "11823:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12006:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12019:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12012:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11965:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "11991:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11991:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11990:15:0"
									},
									"scope": 899,
									"src": "11952:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12135:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12148:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12141:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12100:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12125:9:0"
									},
									"scope": 899,
									"src": "12080:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "12282:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12295:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "12305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12295:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "12288:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12233:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12232:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12273:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12272:9:0"
									},
									"scope": 899,
									"src": "12214:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "12579:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12595:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12595:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "12609:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "12620:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "12585:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12585:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "12585:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12640:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 537,
												"nodeType": "Return",
												"src": "12633:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12520:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12539:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12519:35:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12573:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12572:6:0"
									},
									"scope": 899,
									"src": "12502:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "12781:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12794:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "12806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12794:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"argumentTypes": null,
														"id": 551,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "12813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12794:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "12787:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12732:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12716:32:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12772:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12771:9:0"
									},
									"scope": 899,
									"src": "12698:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "13021:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13036:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13036:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "13050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "13059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "13027:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13027:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "13027:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13079:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "13072:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12964:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12981:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12963:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13015:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13014:6:0"
									},
									"scope": 899,
									"src": "12947:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "13616:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "13640:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13651:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "13622:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13622:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "13622:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13681:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13681:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "13733:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13741:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13695:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "13707:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13695:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 598,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13715:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13715:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13695:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13695:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13695:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "13664:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13664:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "13664:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13798:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 608,
												"nodeType": "Return",
												"src": "13791:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13557:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13576:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13540:51:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13610:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13610:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13609:6:0"
									},
									"scope": 899,
									"src": "13519:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "14261:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14276:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14276:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 630,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "14338:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14299:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 626,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14311:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14311:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14299:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14325:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14299:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14299:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14299:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "14267:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14267:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14267:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14363:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 635,
												"nodeType": "Return",
												"src": "14356:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14219:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14201:37:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14255:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14254:6:0"
									},
									"scope": 899,
									"src": "14175:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "14919:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 647,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14934:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14934:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "14948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "14996:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15013:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14957:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 651,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14969:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14969:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14957:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 654,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "14983:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14957:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14957:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14957:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "14925:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14925:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "14925:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15067:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 663,
												"nodeType": "Return",
												"src": "15060:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14855:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14872:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14854:42:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14912:6:0"
									},
									"scope": 899,
									"src": "14828:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "15328:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 675,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15340:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15340:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "15354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "15334:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15334:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "15334:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15374:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 673,
												"id": 681,
												"nodeType": "Return",
												"src": "15367:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 670,
											"modifierName": {
												"argumentTypes": null,
												"id": 669,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15303:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15303:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15280:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15279:16:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15322:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15321:6:0"
									},
									"scope": 899,
									"src": "15266:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "15906:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 693,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "15920:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15938:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15930:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15930:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15920:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15942:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "15912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15912:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "15912:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "15996:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16017:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16009:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16009:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15996:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16021:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "15988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15988:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "15988:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 710,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16066:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 712,
														"indexExpression": {
															"argumentTypes": null,
															"id": 711,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16076:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16066:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 717,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16108:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16116:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16086:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 715,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "16096:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16086:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16086:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16086:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16066:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "16066:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 722,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16163:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 724,
														"indexExpression": {
															"argumentTypes": null,
															"id": 723,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16173:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 729,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16211:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16186:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 726,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "16196:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16186:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16186:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16186:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16163:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "16163:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 734,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 735,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16246:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 736,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16257:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16229:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16229:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "EmitStatement",
												"src": "16224:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15846:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15862:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15881:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15845:51:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15906:0:0"
									},
									"scope": 899,
									"src": "15827:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "16576:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 748,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "16590:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16609:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16601:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16601:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16590:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16613:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16582:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "16582:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 756,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16654:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 759,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "16686:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 757,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16669:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16669:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16669:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16654:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "16654:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 763,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16699:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 765,
														"indexExpression": {
															"argumentTypes": null,
															"id": 764,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "16709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16699:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 770,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "16743:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 766,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16720:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 768,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 767,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "16730:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16720:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16720:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16720:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16699:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "16699:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16778:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "16782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "16791:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16761:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16761:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "16756:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16534:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16551:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16533:33:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16576:0:0"
									},
									"scope": 899,
									"src": "16519:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "17155:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 791,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "17169:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17188:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17180:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17169:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17192:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17161:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "17161:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 799,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17235:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17245:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17235:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 806,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17279:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17287:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 802,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17256:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "17266:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17256:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17256:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17256:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17235:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "17235:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 811,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17330:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17362:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 812,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17345:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17345:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17345:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17330:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "17330:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 819,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17406:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17398:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "17410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17380:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17380:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "17375:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17113:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17130:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17112:33:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17155:0:0"
									},
									"scope": 899,
									"src": "17098:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "17894:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "17908:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17925:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17917:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17908:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17929:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17900:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "17900:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 846,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "17982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18001:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17993:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17982:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18005:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17974:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "17974:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18049:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 857,
															"indexExpression": {
																"argumentTypes": null,
																"id": 855,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "18061:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18049:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 858,
														"indexExpression": {
															"argumentTypes": null,
															"id": 856,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18049:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 859,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "18079:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18049:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "18049:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 863,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "18105:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "18121:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18096:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18096:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "EmitStatement",
												"src": "18091:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17837:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17852:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17869:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17836:48:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17894:0:0"
									},
									"scope": 899,
									"src": "17819:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "18358:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 877,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "18370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "18379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "18364:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18364:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "18364:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 882,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "18401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 883,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18410:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18410:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 892,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "18463:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18471:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 885,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18424:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 887,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 886,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "18436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18424:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 890,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 888,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18445:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18445:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18424:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18424:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18424:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "18392:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18392:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "18392:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18316:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18333:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18315:33:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18358:0:0"
									},
									"scope": 899,
									"src": "18297:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "10968:7550:0"
						}
					],
					"src": "0:18518:0"
				},
				"id": 0
			}
		}
	}
}